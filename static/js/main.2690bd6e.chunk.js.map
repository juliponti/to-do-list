{"version":3,"sources":["contexts/FirstContext.js","components/Item/index.js","components/List/index.js","components/Input/index.js","assets/cyborg-octopus.png","App.js","reportWebVitals.js","index.js"],"names":["FirstContext","React","createContext","ContextProvider","Provider","Item","props","toDo","contextValue","useContext","className","done","title","type","onClick","taskDone","removeToDo","List","toDos","map","Input","value","onChange","placeholder","App","useState","setToDos","inputValue","setInputValue","newList","filter","item","index","indexOf","src","Img","alt","onSubmit","e","preventDefault","find","val","alert","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAEMA,G,MAAeC,IAAMC,cAAc,OAE5BC,EAAkBH,EAAaI,SAE7BJ,I,OCcAK,MAhBf,SAAcC,GACZ,IAAQC,EAASD,EAATC,KACFC,EAAeC,qBAAWT,GAEhC,OACE,qBAAIU,UAAWH,EAAKI,KAAO,YAAc,YAAzC,UACGJ,EAAKK,MACN,wBAAOF,UAAU,kBAAjB,UACE,uBAAOG,KAAK,WAAWH,UAAU,aACjC,sBAAMA,UAAU,YAAYI,QAAS,kBAAMN,EAAaO,SAASR,MACjE,wBAAQO,QAAS,kBAAKN,EAAaQ,WAAWT,IAA9C,uC,MCCOU,MAZf,SAAcX,GACZ,IAAQY,EAAUZ,EAAVY,MAER,OACE,oBAAIR,UAAU,OAAd,SACGQ,EAAMC,KAAI,SAACZ,GAAD,OACT,cAAC,EAAD,CAAuBA,KAAMA,GAAlBA,EAAKK,a,MCOTQ,MAdf,SAAed,GACb,IAAQe,EAAoBf,EAApBe,MAAOC,EAAahB,EAAbgB,SAEf,OACE,uBACET,KAAK,OACLU,YAAY,2BACZb,UAAU,QACVW,MAAOA,EACPC,SAAUA,KCXD,MAA0B,2C,MC6E1BE,MAtEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAAoCD,mBAAS,IAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAmCMpB,EAAe,CACnBQ,WAbF,SAAoBT,GAClB,IAAMsB,EAAUX,EAAMY,QAAO,SAACC,GAAD,OAAUA,EAAKnB,QAAUL,EAAKK,SAC3Dc,EAASG,IAYTd,SATF,SAAkBR,GAChB,IAAMyB,EAAQd,EAAMe,QAAQ1B,GACtBsB,EAAO,YAAOX,GACpBW,EAAQG,GAAR,2BAAsBzB,GAAtB,IAA4BI,MAAOJ,EAAKI,OACxCe,EAASG,KAQX,OACE,cAAC1B,EAAD,CAAiBkB,MAAOb,EAAxB,SACE,sBAAKE,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAU,yBAAf,SACE,gDAEF,qBAAKA,UAAU,gBAAf,SACE,qBAAKwB,IAAKC,EAAKzB,UAAU,MAAM0B,IAAI,iBAGvC,uBAAM1B,UAAU,WAAhB,UACE,qBAAKA,UAAU,YAAf,SACE,uBAAMA,UAAU,OAAO2B,SAnDjC,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMhC,EAAO,CACXK,MAAOe,EACPhB,MAAM,GAGMO,EAAMsB,MAAK,SAACC,GACxB,OAAOA,EAAI7B,OAASe,MAOpBC,EAAc,IACdc,MAAM,kCAJS,KAAfnC,EAAKK,OAAgBc,EAAS,GAAD,mBAAKR,GAAL,CAAYX,KACzCqB,EAAc,MAqCR,UACE,cAAC,EAAD,CACEP,MAAOM,EACPL,SAAU,SAACgB,GAAD,OAAOV,EAAcU,EAAEK,OAAOtB,UAE1C,wBAAQX,UAAU,MAAlB,gCAGJ,cAAC,EAAD,CAAMQ,MAAOA,aC1DR0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2690bd6e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FirstContext = React.createContext(null);\r\n\r\nexport const ContextProvider = FirstContext.Provider;\r\n\r\nexport default FirstContext;\r\n","import \"./item.scss\";\r\nimport { useContext } from \"react\";\r\nimport FirstContext from \"../../contexts/FirstContext\";\r\n\r\nfunction Item(props) {\r\n  const { toDo } = props;\r\n  const contextValue = useContext(FirstContext);\r\n\r\n  return (\r\n    <li className={toDo.done ? \"task-done\" : \"list-item\"}>\r\n      {toDo.title}\r\n      <label className=\"tools-container\">\r\n        <input type=\"checkbox\" className=\"checkbox\" />\r\n        <span className=\"checkmark\" onClick={()=>  contextValue.taskDone(toDo)} />\r\n        <button onClick={()=> contextValue.removeToDo(toDo)}>üóëÔ∏è</button>\r\n      </label>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import Item from \"../Item\";\r\nimport \"./list.scss\";\r\n\r\nfunction List(props) {\r\n  const { toDos } = props;\r\n\r\n  return (\r\n    <ul className=\"list\">\r\n      {toDos.map((toDo) => (\r\n        <Item key={toDo.title} toDo={toDo} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import \"./input.scss\";\r\n\r\nfunction Input(props) {\r\n  const { value, onChange } = props;\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Escribir nueva tarea ...\"\r\n      className=\"input\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","export default __webpack_public_path__ + \"static/media/cyborg-octopus.348f3655.png\";","import List from \"./components/List\";\r\nimport Input from \"./components/Input\";\r\nimport { useState } from \"react\";\r\nimport Img from \"./assets/cyborg-octopus.png\";\r\nimport { ContextProvider } from \"./contexts/FirstContext.js\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  const [toDos, setToDos] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const toDo = {\r\n      title: inputValue,\r\n      done: false,\r\n    };\r\n\r\n    const found = toDos.find((val) => {\r\n      return val.title == inputValue;\r\n    });\r\n\r\n    if (!found) {\r\n      toDo.title !== \"\" && setToDos([...toDos, toDo]);\r\n      setInputValue(\"\");\r\n    } else {\r\n      setInputValue(\"\");\r\n      alert(\"Esa tarea ya est√° escrita\");\r\n    }\r\n  }\r\n\r\n  function removeToDo(toDo) {\r\n    const newList = toDos.filter((item) => item.title !== toDo.title);\r\n    setToDos(newList);\r\n  }\r\n\r\n  function taskDone(toDo) {\r\n    const index = toDos.indexOf(toDo);\r\n    const newList = [...toDos];\r\n    newList[index] = { ...toDo, done: !toDo.done };\r\n    setToDos(newList);\r\n  }\r\n\r\n  const contextValue = {\r\n    removeToDo: removeToDo,\r\n    taskDone: taskDone,\r\n  };\r\n\r\n  return (\r\n    <ContextProvider value={contextValue}>\r\n      <div className=\"app\">\r\n        <header className=\"app-header\">\r\n          <div className=\"text-header__container\">\r\n            <h1> To do list </h1>\r\n          </div>\r\n          <div className=\"img-container\">\r\n            <img src={Img} className=\"img\" alt=\"octopus\" />\r\n          </div>\r\n        </header>\r\n        <main className=\"app-main\">\r\n          <div className=\"container\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <Input\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n              />\r\n              <button className=\"btn\">Agregar Tarea</button>\r\n            </form>\r\n          </div>\r\n          <List toDos={toDos} />\r\n        </main>\r\n      </div>\r\n    </ContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}